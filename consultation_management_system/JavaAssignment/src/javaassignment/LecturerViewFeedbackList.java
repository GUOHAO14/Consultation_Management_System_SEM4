package javaassignment;

import java.time.LocalDate;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Khoo Guo Hao
 */
public class LecturerViewFeedbackList extends FrameFormat {
    private String sessionUserID;
    private String [] columnName = {"Date", "Time Slot", "Student ID", "Student Name", "Student's Feedback", "My Feedback"};
    private DefaultTableModel model = new DefaultTableModel();
    List<String[]> records = new ArrayList<>();
    List<String[]> detailedRecords = new ArrayList<>();
    List<String> appID = new ArrayList<>();
    private LocalDate filterDate = LocalDate.now();
    
    /**
     * Creates new form LecturerWriteAndViewFeedback
     */
    public LecturerViewFeedbackList(String sessionUserID) {
        
        initComponents();
        this.sessionUserID = sessionUserID;
        super.formatWindow("Past Appointments and Feedbacks");
        model.setColumnIdentifiers(columnName);
        LecturerInteractTextFile getTableRecords = new LecturerInteractTextFile();
        records = getTableRecords.readAppointments(sessionUserID, "past");
        createTable();
    }
    
//    private void chooseDateFilter() {
//        dateChooser.addPropertyChangeListener(new PropertyChangeListener() {
//        
//            public void propertyChange(PropertyChangeEvent event) {
//                try {
//                    System.out.println("hello"); 
//                    Date selectedDate = dateChooser.getDate();
//                    Calendar c = new GregorianCalendar();
//                    c.setTime(selectedDate);
//                    filterDate = LocalDate.of(c.get(Calendar.YEAR), c.get(Calendar.MONTH)+1, c.get(Calendar.DATE));
//                } catch (Exception e) {}
//                
//            }
//        });
//    }
    
    public void createTable() {
        for (String[] record : records) {
            System.out.println("hi");
            appID.add(record[0]);
            String studentFeedback, teacherFeedback;
            switch (record[5]) {
                case "null" -> studentFeedback = "X";
                default -> studentFeedback = "\u2713";
            }
            switch (record[6]) {
                case "null" -> teacherFeedback = "X";
                default -> teacherFeedback = "\u2713";
            }
            String [] newData = {record[3], record[4], record[1], record[2], studentFeedback, teacherFeedback};
            String [] newDetailedData = {record[0], record[3], record[4], record[1], record[2], record[5], record[6], record[7]};
            model.addRow(newData);
            detailedRecords.add(newDetailedData);
        }
    }
    
    public void createTable(boolean filtered) {
        for (String[] record : records) {
            String recordValue = record[3];
            String[] dateParts = recordValue.split("-");
            //removed "-" from dates
            int year = Integer.parseInt(dateParts[0]);
            int month = Integer.parseInt(dateParts[1]);
            int day = Integer.parseInt(dateParts[2]);
            LocalDate recordDate = LocalDate.of(year, month, day);
            if (recordDate.isEqual(filterDate)) {
                appID.add(record[0]);
                String studentFeedback, teacherFeedback;
                switch (record[5]) {
                    case "null" -> studentFeedback = "X";
                    default -> studentFeedback = "\u2713";
                }
                switch (record[6]) {
                    case "null" -> teacherFeedback = "X";
                    default -> teacherFeedback = "\u2713";
                }
                String [] newData = {record[3], record[4], record[1], record[2], studentFeedback, teacherFeedback};
                String [] newDetailedData = {record[0], record[3], record[4], record[1], record[2], record[5], record[6], record[7]};
                model.addRow(newData);
                detailedRecords.add(newDetailedData);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultType = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        dateFilter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        showAll = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        resultType.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        resultType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultType.setText("Past Appointments");

        dateFilter.setText("Filter");
        dateFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFilterActionPerformed(evt);
            }
        });

        mainTable.setModel(model);
        mainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mainTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(mainTable);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        showAll.setText("Show All");
        showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Click on the student row to view feedbacks and write your own feedback.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultType, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateFilter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showAll)
                        .addGap(176, 176, 176))))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultType, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateFilter)
                        .addComponent(showAll)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        JTextField dateField = ((JTextField) dateChooser.getDateEditor().getUiComponent());
        dateField.setEditable(false);
        dateField.setFocusable(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dateFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFilterActionPerformed
        // TODO add your handling code here:
        JTextField dateField = ((JTextField) dateChooser.getDateEditor().getUiComponent());
        if (dateField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Pick a date before clicking filter!", "Invalid Input", JOptionPane.ERROR_MESSAGE);
        } else {
            model.setRowCount(0);
            // Directly update the filterDate here instead of relying on chooseDateFilter
            Date selectedDate = dateChooser.getDate();
            if (selectedDate != null) {
                Calendar c = new GregorianCalendar();
                c.setTime(selectedDate);

                // Combine selected date with current time
                filterDate = LocalDate.of(c.get(Calendar.YEAR), c.get(Calendar.MONTH) + 1, c.get(Calendar.DATE));
            }
            // Call createTable with filter applied
            createTable(true);
        }
    }//GEN-LAST:event_dateFilterActionPerformed

    private void showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllActionPerformed
        // TODO add your handling code here:
        JTextField dateField2 = ((JTextField) dateChooser.getDateEditor().getUiComponent());
        dateField2.setText("");
        model.setRowCount(0);
        createTable();
    }//GEN-LAST:event_showAllActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new LecturerHomePage(sessionUserID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void mainTableMouseReleased(java.awt.event.MouseEvent evt) {
        int row = mainTable.getSelectedRow();
        String selectedAppID = String.valueOf(appID.get(row));
        System.out.println(selectedAppID);
        String [] selectedStudent = detailedRecords.get(row);
        System.out.println(selectedStudent[3]);
        new LecturerViewAndWriteFeedback(sessionUserID, selectedStudent).setVisible(true);
        this.dispose();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecturerViewFeedbackList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecturerViewFeedbackList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecturerViewFeedbackList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecturerViewFeedbackList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecturerViewFeedbackList("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton dateFilter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mainTable;
    private javax.swing.JLabel resultType;
    private javax.swing.JButton showAll;
    // End of variables declaration//GEN-END:variables
}
